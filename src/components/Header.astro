---
import Maps from "@icons/Maps.astro";
import HamburgerButton from "../components/HamburgerButton.astro"
import { MOBILE_MENU_CONTENT_ID } from "../consts/mobile-menu";
import ArrowMobile from "@icons/ArrowMobile.astro";
import Phone from "@icons/Phone.astro";
import Mail from "@icons/Mail.astro";


const navLinks = [
  {id: "link-home", href: "/", label: "Inicio" } ,
  {id: "link-eventos", href: "/Eventos" , label: "Eventos" } ,
  {id: "link-gastronomia", href: "/Gastronomia", label: "Gastronomia"  },
  {id: "link-contacto", href: "/Contacto", label: "Contacto"},
];
---

<header class=" flex justify-between items-center  headroom ">

    <nav class="group flex items-center w-full justify-between">

      <div class="flex">
      <a
      class="text-link select-none "
      href="mailto:lapergola@telpin.com.ar"
    rel="noreferrer noopener">
    
      <span>Reservar</span>
    
   
    </a>
  </div>
    
      <img src="/logo.svg" alt="Logo Balneario la pergola"   />
   
    
<div class="flex gap-6  ">
  {navLinks.map((link) => (
    <a 
      id={link.id} 
      href={link.href}
      class="hidden  select-none items-center justify-center  text-center text-link lg:flex "
    >
      {link.label}
    </a>
  ))}
</div>
   

    <HamburgerButton class:list={"block lg:hidden"} id="menuButton" />



    <div
    class="fixed inset-0 z-50 flex w-screen flex-col items-center justify-between overflow-x-auto bg-[#318CE7] lg:hidden h-screen "
    id={MOBILE_MENU_CONTENT_ID}
  >
   
  
  <aside class="flex w-full items-center justify-between h-10 py-[60px] px-[32px]">
      <a
      class="   text-[#fff] text-link select-none z-[999]"
      href=""
    >
      Reservar
    </a>

<HamburgerButton id="innerMenuButton" />
    
    </aside>

    

    
    <nav class=" w-full px-8 flex flex-col ">
    {
        navLinks.map((link, index) => (
          
          <a 
            id={`mobile-nav-link-${index}`} 
            href={link.href}
            class="w-full select-none flex justify-between items-center py-2 nav-font-medium text-[#fff] border-b-[1px] border-[#fff] gap-x-2"
          >
            {link.label}

            <ArrowMobile />
          </a>
        ))
      }
      </nav>


      <div class="w-full text-[#fff] px-8 flex flex-col gap-2 pb-20 text-[14px] italic">
     
     <div class="flex flex-row gap-2">
      <Maps/> <a href="https://maps.app.goo.gl/Ceab3WJzTw9U1Kvz9" rel="noreferrer noopener">Av. Costanera & Comodoro Py, Valeria del mar</a>
     </div>
        
     <div class="flex flex-row gap-2">
    <Phone/> <a href="https://wa.me/2267436335" rel="noreferrer noopener" >Tel. 2267436335</a>
    </div>

     <div class="flex flex-row gap-2">
    <Mail/> <a href="mailto:lapergola@telpin.com.ar" rel="noreferrer noopener">lapergola@telpin.com.ar</a>
     </div>
      </div>

  </div>
</nav>

</header>



<style>
    #menuMobileContent {
    opacity: 0;
    pointer-events: none;
    transition:opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
   transform: translateX(100%); /* Inicialmente fuera de la pantalla a la derecha */
  }

  #menuMobileContent.open {
    opacity: 1 !important;
    pointer-events: all;
    transform: translateX(0); 
  }


 



  .headroom {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  height: clamp(120px, 9.6875vw, 9.6875vw); /* Altura inicial */
  
  transition: background-color 0.3s ease-in-out, height 0.3s ease-in-out, transform 0.3s ease-in-out, padding 0.3s ease-in-out;
  background: linear-gradient(180deg, #00000080, #0000);
  color: #fff;
  padding: clamp(40px, 4vw, 60px) 32px;  /* Añadir padding vertical */
}

.headroom img {
  height: clamp(120px, 9.6875vw, 9.6875vw);
  width: clamp(120px, 9.6875vw, 9.6875vw);
  transition: height 0.3s ease-in-out;
  position: absolute; /* Para usar transform correctamente */
  top: 50%; /* Centro vertical */
  left: 50%; /* Centro horizontal */
  transform: translate(-50%, -50%); /* Centrado */
}

.headroom--scrolled img {
  height: 40px; /* Tamaño reducido del logo */
}

.headroom--pinned {
  transform: translateY(0);
}

.headroom--unpinned {
  transform: translateY(-100%);
}

.headroom--scrolled {
  background: #fff; /* Color cuando el usuario hace scroll */
  height: 70px; /* Altura reducida al hacer scroll */
  color: #000;
  padding: 5px 32px; /* Ajustar padding al hacer scroll */
  border-bottom: 1px solid #000;
}

.headroom--scrolled aside{
  color:#fff;
  height: 70px;
  padding: 5px 32px; /* Ajustar padding al hacer scroll */

  
}

</style>


<script>
    import { $ } from "../lib/dom-selector";
    import Headroom from "headroom.js";
   
    function toggleMenu(
		nav: HTMLElement | null,
		menuMobileContent: HTMLElement | null,
		innerMenuButton: HTMLElement | null
	) {
		menuMobileContent?.classList.toggle("open")
		nav?.classList.toggle("open")
	  document.body.classList.toggle("overflow-hidden")
		document.body.classList.toggle("lg:overflow-auto")




// Cambia el texto del botón dependiendo del estado del menú
if (menuMobileContent?.classList.contains("open")) {
		innerMenuButton && (innerMenuButton.textContent = "Cerrar Menú");
	} else {
		innerMenuButton && (innerMenuButton.textContent = "Menú");
	}


	}


	document.addEventListener("astro:page-load", () => {
		const nav = $("nav")
		const menuButton = $("#menuButton")
		const innerMenuButton =  $("#innerMenuButton")
		const menuMobileContext = $("#menuMobileContent")
		

		menuButton?.addEventListener("hamburgerButtonClicked", () =>
			toggleMenu(nav, menuMobileContext, innerMenuButton)
		)
		innerMenuButton?.addEventListener("hamburgerButtonClicked", () =>
			toggleMenu(nav, menuMobileContext, innerMenuButton)
		)

		if (menuMobileContext?.classList.contains("open")) {
			toggleMenu(nav, menuMobileContext, innerMenuButton)
		}
	})

 // Inicializar Headroom

 document.addEventListener("astro:page-load", () => {
 const header = document.querySelector(".headroom");
    if (header) {
      const headroom = new Headroom(header, {
        onUnpin: function () {
          header.classList.remove("headroom--scrolled");
        },
        onPin: function () {
          header.classList.add("headroom--scrolled");
        },
        onTop: function () {
          header.classList.remove("headroom--scrolled");
        },
        onNotTop: function () {
          header.classList.add("headroom--scrolled");
        },
      });


     
      
      headroom.init();

    }
  });


    

    

   
   


   

    
    
  
  
  
 
</script>



